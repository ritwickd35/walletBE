doctype html
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  title View Wallet
  link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9' crossorigin='anonymous')
body
  .container
    #walletDetailsDiv.row
        .card.text-center(style='margin-top: 20px; padding: 0px')
        h5.card-header Wallet Details
        .card-body
            .row
            .col-6
                h5 Wallet Name
                h5#walletName Hello
            .col-6
                h5 Wallet Balance
                h5#walletBalance Hello
    #walletInputDiv.row.card.my-4.py-3
        form#walletDetailsForm
        .mb-3
            label.form-label(for='inputWalletName') Wallet Name
            input#inputWalletName.form-control(type='text' aria-describedby='walletHelp' name='walletName')
            #walletHelp.form-text Enter your wallet name
        .mb-3
            label.form-label(for='inputBalance') Initial Balance
            input#inputBalance.form-control(type='text' name='walletBalance')
        button.btn.btn-primary(type='submit') Submit
    #transactionDiv.row.card.my-4.py-3
        form
        .mb-3
            label.form-label(for='inputTransactionAmt') Transaction Amount
            input#inputTransactionAmt.form-control(type='number' aria-describedby='walletHelp')
            #transactionHelp.form-text
            | Enter Amount for transaction
        .mb-3
            label.form-label(for='transactionAmt') Transaction Name
            input#transactionAmt.form-control(type='text')
        .form-check
            input#transactionCredit.form-check-input(type='radio' name='transactionType')
            label.form-check-label(for='transactionCredit')
            | CREDIT
        .form-check
            input#transactionDebit.form-check-input(type='radio' name='transactionType' checked='')
            label.form-check-label(for='transactionDebit')
            | DEBIT
        button.btn.btn-primary(type='submit') Submit
    script(type='text/javascript').
        const walletDetails = localStorage.getItem("walletDetails");
        if (!walletDetails) {
        document.getElementById("walletDetailsDiv").style.display = "none";
        document.getElementById("transactionDiv").style.display = "none";
        } else {
        document.getElementById("walletInputDiv").style.display = "none";
        // load wallet details from BE using localstorage info
        }

        function handleWalletDetails(eventData) {
            // Get the form element
            const form = eventData.target;
            // Create a FormData object from the form
            const formData = new FormData(form);
            const name = formData.get("walletName");
            const balance = formData.get("walletBalance");
            console.log("eventData", name, balance);
            const reqData = { name, balance };
            const url = "/setup";
            fetch(url, {
            method: "POST", // *GET, POST, PUT, DELETE, etc.
            mode: "cors", // no-cors, *cors, same-origin
            cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
            credentials: "same-origin", // include, *same-origin, omit
            headers: {
            "Content-Type": "application/json",
            // 'Content-Type': 'application/x-www-form-urlencoded',
            },
            redirect: "follow", // manual, *follow, error
            referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
            body: JSON.stringify(reqData), // body data type must match "Content-Type" header
            })
            .then((response) => {
            return response.json();
            })
            .then((data) => {
            document.getElementById("walletName").textContent = data.name;
            document.getElementById("walletBalance").textContent = data.balance;
            document.getElementById("walletDetailsDiv").style.display = "";
            document.getElementById("transactionDiv").style.display = "";
            });
            eventData.preventDefault();
        }
       
        // add event handlers to submit event for wallet display and transaction amount
        document.getElementById("walletDetailsForm").addEventListener("submit", (eventData) => {
            const form = eventData.target;
            // Create a FormData object from the form
            const formData = new FormData(form);
            const name = formData.get("walletName");
            const balance = formData.get("walletBalance");
            console.log("eventData", name, balance);
            const reqData = { name, balance };
            const url = "/setup";
            fetch(url, {
            method: "POST", // *GET, POST, PUT, DELETE, etc.
            mode: "cors", // no-cors, *cors, same-origin
            cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
            credentials: "same-origin", // include, *same-origin, omit
            headers: {
            "Content-Type": "application/json",
            // 'Content-Type': 'application/x-www-form-urlencoded',
            },
            redirect: "follow", // manual, *follow, error
            referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
            body: JSON.stringify(reqData), // body data type must match "Content-Type" header
            })
            .then((response) => {
            return response.json();
            })
            .then((data) => {
            document.getElementById("walletName").textContent = data.name;
            document.getElementById("walletBalance").textContent = data.balance;
            document.getElementById("walletDetailsDiv").style.display = "";
            document.getElementById("transactionDiv").style.display = "";
            });
            eventData.preventDefault();
        });
        
